{"version":3,"sources":["AddCategory.js","helpers/GetGifs.js","GifGridItem.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","trim","length","cats","preventDefault","type","value","onChange","target","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","setTimeout","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SATW,SAACC,GACfH,EAAWI,OAAOC,OAAS,IAC1BP,GAAe,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,OACvCL,EAAc,KAElBE,EAAEI,kBAIF,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SAjBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACP,mCACNC,EAFa,iDAEoCC,UAAWH,GAF/C,6BACP,oCADO,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCFCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECJX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAO,GACPa,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiCxC,OA1BAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFC,QAAQC,IAAIF,GAEZG,YAAW,WACPN,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEb,UAIZ,CAACpB,IAWGqB,ED3B0BQ,GAAnBhB,EAFqB,EAE5BN,KAAea,EAFa,EAEbA,QAGtB,OACI,qCACA,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAU,mCAAb,uBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEhBhBmB,EAAe,WAExB,IAF8B,EAGO5C,mBADhB,CAAC,cAFQ,mBAGtB6C,EAHsB,KAGV9C,EAHU,KAK9B,OACI,qCACA,kDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWtB,KAAK,SAAAuB,GACZ,OAAO,cAAC,EAAD,CAEChC,SAAUgC,GADLA,Y,MCdjCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f366ef74.chunk.js","sourcesContent":["\r\nimport React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChanged = (e) => {        \r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {             \r\n        if(inputValue.trim().length > 2){            \r\n            setCategories( cats => [inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n        e.preventDefault();        \r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}  >\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChanged }                \r\n            />\r\n        </form>        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GetGifs = async(category) => {\r\n    const key = 'PFxDudpXv7KYXd57XbB2GDUZYOo30p7q';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=${key}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n    \r\n}    \r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    //console.log(title );\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'  >\r\n            <img src={url} alt={title} ></img>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from './hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data : images, loading} = useFetchGifs();\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        {loading && <p className='animate__animated animate__flash' >loading..</p>}\r\n\r\n        <div className=\"card-grid\">            \r\n            {\r\n                images.map( img => (\r\n                  <GifGridItem \r\n                    key={img.id}\r\n                    {...img } \r\n                  />\r\n\r\n                ))\r\n            }            \r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { GetGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading:true\r\n    })\r\n\r\n    useEffect( () => {\r\n        GetGifs(category)\r\n            .then(imgs => {\r\n\r\n                console.log(imgs);\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false   \r\n                    })\r\n                }, 2000);\r\n                \r\n            });\r\n        ;\r\n    }, [category])\r\n\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data:[2,3,4,3,4,56],\r\n    //         loading:false\r\n    //     })\r\n    // }, 3000);\r\n\r\n\r\n    return state;\r\n}","\r\nimport React, {useState} from 'react'\r\nimport { AddCategory } from './AddCategory';\r\n\r\nimport { GifGrid} from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const initialState = ['One punch'];\r\n    const [ categories, setCategories] = useState(initialState);\r\n\r\n    return (\r\n        <>        \r\n        <h2> Gif Expert App </h2>  \r\n        <AddCategory setCategories={setCategories} />\r\n        <hr />          \r\n        <ol>\r\n            {\r\n                categories.map( cat => {\r\n                    return <GifGrid \r\n                            key={cat} \r\n                            category={cat} />\r\n                })\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(  \n    <GifExpertApp />,  \n  document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}